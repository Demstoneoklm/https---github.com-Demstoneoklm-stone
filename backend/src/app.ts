import express from 'express';
import { config } from 'dotenv';
import cors from 'cors'; // ‚úÖ Import de CORS
import routes from './routes';
import { sequelize } from './config/database';
import User from './models/User.model'; // ‚úÖ Ajout de l'import du mod√®le
import signatureRoutes from './routes/signature.routes'; // Ajout de l'import de signatureRoutes

config(); // Charge les variables d'environnement

const app = express();
const PORT = process.env.PORT || 3000;

// ‚úÖ Configuration CORS AVANT les routes
app.use(cors({
    origin: 'http://localhost:3000', // ‚úÖ Adresse de ton frontend
    credentials: true
}));

// Middleware de base
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Routes
app.use('/api', routes);
app.use('/api/signature', signatureRoutes); // Ajout de la route pour signature

// üîÅ Synchronisation DB + D√©marrage serveur
sequelize.sync({ force: true }) // ‚ö†Ô∏è ATTENTION : supprime et recr√©e toutes les tables
    .then(() => {
        console.log('‚úÖ Toutes les tables ont √©t√© cr√©√©es');

        // üîÅ Deuxi√®me synchronisation safe
        return sequelize.sync({ alter: true });
    })
    .then(() => {
        console.log('‚úÖ Mod√®les synchronis√©s (mode safe)');
        app.listen(PORT, () => {
            console.log(`Serveur d√©marr√© sur http://localhost:${PORT}`);
        });
    })
    .catch((err) => {
        console.error('‚ùå √âchec de la synchronisation des mod√®les :', err);
    });
